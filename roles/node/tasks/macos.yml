---
- name: "Running Node Tasks using Fast Node Manager (FNM)"
  block:
    - name: Install Fast Node Manager (FNM)
      become: true
      community.general.homebew:
        name: fnm
        state: present
        update_homebrew: true

    - name: Install nodejs via fnm
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          eval "$(fnm env)"
          fnm install {{ item }}
        executable: /bin/bash
      register: fnm_results
      changed_when: "'successfully downloaded' in fnm_results.stdout"
      loop: "{{ nodejs_versions }}"

    - name: Define default_nodejs_version
      set_fact:
        default_nodejs_version: "{{ nodejs_versions|first }}"
      when:
        - set_default_nodejs_ver|default(true)
        - default_nodejs_version is not defined

    - name: Set default nodejs version via fnm
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          eval "$(fnm env)"
          fnm use {{ default_nodejs_version }}
          fnm default $(node --version)
        executable: /bin/bash
      args:
        creates: "{{ ansible_env.HOME }}/.local/share/fnm/aliases/default/bin"
      when:
        - set_default_nodejs_ver|default(true)

    - name: Get default nodejs version via fnm
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          eval "$(fnm env)"
          fnm use {{ default_nodejs_version }} > /dev/null 2>&1
          readlink -f $(command -v node) | sed  -E "s%/node$%%g"
        executable: /bin/bash
      register: default_nodejs_path_results
      changed_when: false

    - name: Definde default_nodejs_path
      set_fact:
        default_nodejs_path: "{{ default_nodejs_path_results.stdout }}"

    - name: Install global NPM packages
      community.general.npm:
        name: "{{ item.name | default(item) }}"
        state: "{{ item.state | default('present') }}"
        version: "{{ item.version | default(omit) }}"
        global: true
      environment:
        PATH: "{{ default_nodejs_path }}:{{ ansible_env.PATH }}"
      loop: "{{ npm_packages }}"
