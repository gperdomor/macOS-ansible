---
- name: "Running Node Tasks using Volta"
  when: node_manager == "volta"
  block:
    - name: Install Volta JavaScript Tool Manager.
      shell: "curl https://get.volta.sh | bash"
      args:
        chdir: "{{ ansible_env.HOME }}"
        creates: "{{ ansible_env.HOME }}/.volta"

    - name: Install default node version.
      shell: "{{ ansible_env.HOME }}/.volta/bin/volta install node@{{ node_version }}"
      changed_when: false

    - name: List installed npm packages.
      shell: "{{ ansible_env.HOME }}/.volta/bin/volta list"
      register: npm_list
      check_mode: false
      changed_when: false

    - name: Install global npm packages.
      shell: "{{ ansible_env.HOME }}/.volta/bin/volta install {{ item }}"
      loop: "{{ npm_packages }}"
      when: (item | string) not in npm_list.stdout

- name: "Running Node Tasks using Node Version Manager (NVM)"
  when: node_manager == "nvm"
  block:
    - name: Install Node Version Manager (NVM)
      shell: "curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v{{ nvm_version }}/install.sh | bash"
      args:
        chdir: "{{ ansible_env.HOME }}"
        creates: "{{ ansible_env.HOME }}/.nvm/nvm.sh"

    - name: Install default node version.
      shell: >
        . {{ ansible_env.HOME }}/.nvm/nvm.sh && nvm install {{ node_version }}
      register: node_version_response
      changed_when: "'already installed' not in node_version_response.stderr"

    - name: Make Node {{ node_version }} as default.
      shell: >
        . {{ ansible_env.HOME }}/.nvm/nvm.sh && nvm alias default {{ node_version }}
      changed_when: false

    - name: List installed npm packages.
      shell: >
        . {{ ansible_env.HOME }}/.nvm/nvm.sh && {{ ansible_env.HOME }}/.nvm/versions/node/v{{ node_version }}/bin/npm -g list --depth=0
      register: npm_list
      check_mode: false
      changed_when: false

    - name: Install global npm packages.
      shell: >
        . {{ ansible_env.HOME }}/.nvm/nvm.sh && {{ ansible_env.HOME }}/.nvm/versions/node/v{{ node_version }}/bin/npm -g install {{ item }}
      loop: "{{ npm_packages }}"
      when: (item | string) not in npm_list.stdout
